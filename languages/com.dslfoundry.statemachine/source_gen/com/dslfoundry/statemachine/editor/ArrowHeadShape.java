package com.dslfoundry.statemachine.editor;

/*Generated by MPS */

import de.itemis.mps.editor.diagram.runtime.shape.AbstractShape;
import org.jetbrains.annotations.Nullable;
import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;
import de.itemis.mps.editor.diagram.runtime.shape.IShapeStyle;
import java.awt.BasicStroke;

public class ArrowHeadShape extends AbstractShape {

  private double relativeHeight;
  private boolean filled;
  private double relativeWidth;

  public ArrowHeadShape(double relativeHeight, boolean filled, double relativeWidth) {
    this.relativeHeight = relativeHeight;
    this.filled = filled;
    this.relativeWidth = relativeWidth;
  }

  @Nullable
  @Override
  public Double getDefaultSize() {
    return ((double) (15));
  }



  @Override
  protected void draw(final Graphics2D graphics, final Rectangle2D bounds, IShapeStyle style) {
    // draw (the two parts/lines of) the arrowhead:
    graphics.setStroke(new BasicStroke(2));
    graphics.drawLine((int) bounds.getMinX(), (int) bounds.getMinY(), (int) bounds.getMaxX(), ((int) (bounds.getMinY() + bounds.getMaxY())) / 2);
    graphics.drawLine((int) bounds.getMinX(), (int) bounds.getMaxY(), (int) bounds.getMaxX(), ((int) (bounds.getMinY() + bounds.getMaxY())) / 2);
    // add missing part of connector line:
    graphics.setStroke(new BasicStroke(1));
    graphics.drawLine((int) bounds.getMinX(), (int) (bounds.getMaxY() + bounds.getMinY()) / 2, (int) bounds.getMaxX(), ((int) (bounds.getMinY() + bounds.getMaxY())) / 2);
  }

}
