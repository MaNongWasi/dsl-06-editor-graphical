package StateMachine.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.base.BaseScopeProvider;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.scope.Scope;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsContext;
import StateMachine.behavior.Transition__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.scope.ListScope;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import java.util.HashMap;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SInterfaceConcept;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class Transition_Constraints extends BaseConstraintsDescriptor {
  public Transition_Constraints() {
    super(CONCEPTS.Transition$2j);
  }

  @Override
  protected Map<SReferenceLink, ReferenceConstraintsDescriptor> getSpecifiedReferences() {
    BaseReferenceConstraintsDescriptor d0 = new BaseReferenceConstraintsDescriptor(LINKS.target$y67Z, this) {
      @Override
      public boolean hasOwnScopeProvider() {
        return true;
      }
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseScopeProvider() {
          @Override
          public SNodeReference getSearchScopeValidatorNode() {
            return breakingNode_mgdfdy_a0a0a0a0a1a0a0a0c;
          }
          @Override
          public Scope createScope(final ReferenceConstraintsContext _context) {
            return Transition__BehaviorDescriptor.getStatesInScope_id1T98ANAP4wY.invoke(SNodeOperations.cast(_context.getContextNode(), CONCEPTS.Transition$2j));
          }
        };
      }
    };
    BaseReferenceConstraintsDescriptor d1 = new BaseReferenceConstraintsDescriptor(LINKS.source$y0IC, this) {
      @Override
      public boolean hasOwnScopeProvider() {
        return true;
      }
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseScopeProvider() {
          @Override
          public SNodeReference getSearchScopeValidatorNode() {
            return breakingNode_mgdfdy_a0a0a0a0a1a0a0b0c;
          }
          @Override
          public Scope createScope(final ReferenceConstraintsContext _context) {
            return Transition__BehaviorDescriptor.getStatesInScope_id1T98ANAP4wY.invoke(SNodeOperations.cast(_context.getContextNode(), CONCEPTS.Transition$2j));
          }
        };
      }
    };
    BaseReferenceConstraintsDescriptor d2 = new BaseReferenceConstraintsDescriptor(LINKS.trigger$y6P2, this) {
      @Override
      public boolean hasOwnScopeProvider() {
        return true;
      }
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseScopeProvider() {
          @Override
          public SNodeReference getSearchScopeValidatorNode() {
            return breakingNode_mgdfdy_a0a0a0a0a1a0a0c0c;
          }
          @Override
          public Scope createScope(final ReferenceConstraintsContext _context) {
            return ListScope.forNamedElements(SLinkOperations.getChildren(SNodeOperations.getNodeAncestor(_context.getContextNode(), CONCEPTS.IStateMachineContents$nr, false, false), LINKS.events$5BDE));
          }
        };
      }
    };
    Map<SReferenceLink, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLink, ReferenceConstraintsDescriptor>();
    references.put(d0.getReference(), d0);
    references.put(d1.getReference(), d1);
    references.put(d2.getReference(), d2);
    return references;
  }
  private static final SNodePointer breakingNode_mgdfdy_a0a0a0a0a1a0a0a0c = new SNodePointer("r:b2b3a449-63c0-4dac-89b0-100e7e6174f5(StateMachine.constraints)", "2182313345562183335");
  private static final SNodePointer breakingNode_mgdfdy_a0a0a0a0a1a0a0b0c = new SNodePointer("r:b2b3a449-63c0-4dac-89b0-100e7e6174f5(StateMachine.constraints)", "2182313345562217681");
  private static final SNodePointer breakingNode_mgdfdy_a0a0a0a0a1a0a0c0c = new SNodePointer("r:b2b3a449-63c0-4dac-89b0-100e7e6174f5(StateMachine.constraints)", "2182313345562228983");

  private static final class CONCEPTS {
    /*package*/ static final SConcept Transition$2j = MetaAdapterFactory.getConcept(0xdac36cdfb92546cfL, 0x8a2c2b6a1b73035cL, 0x51c6850f8a2fce2eL, "StateMachine.structure.Transition");
    /*package*/ static final SInterfaceConcept IStateMachineContents$nr = MetaAdapterFactory.getInterfaceConcept(0xdac36cdfb92546cfL, 0x8a2c2b6a1b73035cL, 0x6b05dff7a3efd459L, "StateMachine.structure.IStateMachineContents");
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink target$y67Z = MetaAdapterFactory.getReferenceLink(0xdac36cdfb92546cfL, 0x8a2c2b6a1b73035cL, 0x51c6850f8a2fce2eL, 0x51c6850f8a2fce3eL, "target");
    /*package*/ static final SReferenceLink source$y0IC = MetaAdapterFactory.getReferenceLink(0xdac36cdfb92546cfL, 0x8a2c2b6a1b73035cL, 0x51c6850f8a2fce2eL, 0x51c6850f8a2fce3cL, "source");
    /*package*/ static final SReferenceLink trigger$y6P2 = MetaAdapterFactory.getReferenceLink(0xdac36cdfb92546cfL, 0x8a2c2b6a1b73035cL, 0x51c6850f8a2fce2eL, 0x51c6850f8a2fce41L, "trigger");
    /*package*/ static final SContainmentLink events$5BDE = MetaAdapterFactory.getContainmentLink(0xdac36cdfb92546cfL, 0x8a2c2b6a1b73035cL, 0x6b05dff7a3efd459L, 0x51c6850f8a2fce36L, "events");
  }
}
